<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>com.ebao.base.parent</artifactId>
	<version>4.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>com.ebao.base.parent</name>
	<url>http://www.ebaotech.com</url>
	<parent>
		<groupId>com.ebao</groupId>
		<artifactId>ebao-lib-pom</artifactId>
		<version>1.0.0</version>
	</parent>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.build.resourceEncoding>UTF-8</project.build.resourceEncoding>
		<maven.compile.encoding>UTF-8</maven.compile.encoding>
		<asciidoctor.doc.home>src/main/adoc</asciidoctor.doc.home>
		<dbasset.activation.flagfile>dbasset.history</dbasset.activation.flagfile>
		<opts-plugin-version>0.0.2-SNAPSHOT</opts-plugin-version>
		<asciidoctor.maven.plugin.version>1.5.2.1</asciidoctor.maven.plugin.version>
		<jruby.version>1.7.20.1</jruby.version>
		
		<frontend.maven.plugin.version>0.0.27-SNAPSHOT</frontend.maven.plugin.version>
		<ebao.assembly.version>3.1-SNAPSHOT</ebao.assembly.version>
		<npm.version>2.7.1</npm.version>
		<nodejs.version>v4.2.3</nodejs.version>
		<ebao.nodejs.registry>http://repo.ebaotech.com/nexus/content/groups/npm-all/</ebao.nodejs.registry>
		<local.nodejs.software.repo>http://maven-repository.ebaotech.com/softwares/</local.nodejs.software.repo>
	</properties>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<!-- don't use 3.3 version, which not work with m2e plugin -->
				<version>3.2</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.codehaus.groovy</groupId>
						<artifactId>groovy-eclipse-compiler</artifactId>
						<version>2.9.1-01</version>
					</dependency>
					<dependency>
						<groupId>org.codehaus.groovy</groupId>
						<artifactId>groovy-eclipse-batch</artifactId>
						<version>2.3.7-01</version>
					</dependency>
				</dependencies>
			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.19.1</version>
				<configuration>
					<encoding>UTF-8</encoding>
					<inputEncoding>UTF-8</inputEncoding>
					<outputEncoding>UTF-8</outputEncoding>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.surefire</groupId>
						<artifactId>surefire-junit47</artifactId>
						<version>2.19.1</version>
					</dependency>
				</dependencies>

			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<goals>
							<goal>jar</goal>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
			  <groupId>org.apache.maven.plugins</groupId>
			  <artifactId>maven-install-plugin</artifactId>
			  <version>2.5.2</version>
			</plugin>

			<plugin>
			  <groupId>org.apache.maven.plugins</groupId>
			  <artifactId>maven-deploy-plugin</artifactId>
			  <version>2.8.2</version>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>

				<!--bind it to package to build db/web artifacts -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.5.4</version>
					<dependencies>
						<dependency>
							<groupId>com.ebao</groupId>
							<artifactId>ebao-assembly-descriptor</artifactId>
							<version>${ebao.assembly.version}</version>
						</dependency>
					</dependencies>
					<executions>
						<!-- package for db classifier -->
						<execution>
							<id>db</id>
							<goals>
								<goal>single</goal>
							</goals>
							<configuration>
								<descriptorRefs>
									<descriptorRef>assembly-db</descriptorRef>
								</descriptorRefs>
							</configuration>
						</execution>
						<!-- package for ui classifier -->
						<execution>
							<id>ui</id>
							<goals>
								<goal>single</goal>
							</goals>
							<configuration>
								<descriptorRefs>
									<descriptorRef>assembly-ui</descriptorRef>
								</descriptorRefs>
							</configuration>
						</execution>

						<!-- assembly all the adoc file -->
						<execution>
							<id>adoc</id>
							<goals>
								<goal>single</goal>
							</goals>
							<configuration>
								<descriptorRefs>
									<descriptorRef>assembly-adoc</descriptorRef>
								</descriptorRefs>
							</configuration>
						</execution>
						
						<!-- assembly all the dbasset file -->
						<execution>
							<id>dbasset</id>
							<goals>
								<goal>single</goal>
							</goals>
							<configuration>
								<descriptorRefs>
									<descriptorRef>assembly-dbasset</descriptorRef>
								</descriptorRefs>
							</configuration>
						</execution>
									
						<!-- assembly ui -->
						<execution>
							<id>uipackage</id>
							<goals>
								<goal>single</goal>
							</goals>
							<configuration>
								<descriptorRefs>
									<descriptorRef>assembly-uipackage</descriptorRef>
								</descriptorRefs>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<!-- 
			当main下存在dbscript目录时,自动激活db-pom profile,完成 db classifier 的构建 
			需要执行如下步骤
			1.生成依赖关系树 dept-tree.info
			2.生成product.info文件 这个task 要求当前执行的project含有如下属性(一般来源于当前流的parent 工程的定义)
				product.name 当前模块的所属产品,比如 platform,属于项目代号
				dependOn 依赖的项目代号
			3.调用assembly-db.xml中的定义打包
		-->
		<profile>
			<id>db-pom</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<file>
					<exists>src/main/dbscript</exists>
				</file>
			</activation>

			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>2.2</version>
						<executions>
							<execution>
								<id>generate-module-dept-tree</id>
								<phase>package</phase>
								<goals>
					              	<goal>tree</goal>
					            </goals>
					            <configuration>
					              <outputFile>${project.build.directory}/db-dependencies/dept-tree.info</outputFile>
					              <outputType>tgf</outputType>
					              <!-- [groupId]:[artifactId]:[type]:[version] -->
					              <includes>com.ebao*</includes>
					            </configuration>
							</execution>
						</executions>
					</plugin>
					<!--
					<plugin>
						<groupId>com.ebao.opts</groupId>
						<artifactId>opts-maven-plugin</artifactId>
						<version>${opts-plugin-version}</version>
						<executions>
							<execution>
								<id>generate-product-info</id>
								<phase>package</phase>
								<goals>
					              	<goal>productinfo</goal>
					            </goals>
					            <configuration>
					            	<product>${product.name}</product>
					            </configuration>
							</execution>
						</executions>
					</plugin>
					-->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<executions>
							<execution>
								<id>db</id>
								<phase>package</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		
		<!-- 当main 下存在webapp目录,自动机会ui-pom profile 构建uipackage -->
		<profile>
			<id>ui-pom</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<file>
					<exists>src/main/webapp</exists>
				</file>
			</activation>

			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<executions>
							<execution>
								<id>ui</id>
								<phase>package</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- 当main下存在adoc目录时 自动构建adoc的package -->
		<profile>
			<id>adoc-pom</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<file>
					<exists>${asciidoctor.doc.home}</exists>
				</file>
			</activation>

			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<executions>
							<execution>
								<id>adoc</id>
								<phase>package</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- 当main下存在adoc目录时,自动构建adoc的package  -->
		<profile>
			<id>adoc-build-local</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<file>
					<exists>${asciidoctor.doc.home}</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctor-maven-plugin</artifactId>
						<version>${asciidoctor.maven.plugin.version}</version>
						<dependencies>
							<!-- Comment this section to use the default jruby artifact provided 
								by the plugin -->
							<dependency>
								<groupId>org.jruby</groupId>
								<artifactId>jruby-complete</artifactId>
								<version>${jruby.version}</version>
							</dependency>
							<!-- Uncomment the following element to override the version of AsciidoctorJ -->
							<!-- <dependency> <groupId>org.asciidoctor</groupId> <artifactId>asciidoctorj</artifactId> 
								<version>1.5.3-SNAPSHOT</version> </dependency> -->
						</dependencies>
						<configuration>
							<sourceDirectory>${asciidoctor.doc.home}</sourceDirectory>
							<!-- If you set baseDir to ${project.basedir}, top-level includes 
								are resolved relative to the project root -->
							<!-- <baseDir>${project.basedir}</baseDir> -->
							<!-- Attributes common to all output formats -->
							<attributes>
								<endpoint-url>http://example.org</endpoint-url>
								<sourcedir>${project.build.sourceDirectory}</sourcedir>
								<project-version>${project.version}</project-version>
							</attributes>
						</configuration>
						<executions>
							<execution>
								<id>asciidoc-local-build</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<backend>html5</backend>
									<sourceHighlighter>coderay</sourceHighlighter>
									<!-- Scenarios for linking vs embedding assets: Link to both stylesheets 
										and images:: - don't set embedAssets option - set linkcss attribute to true 
										- set imagesdir attribute to path relative to AsciiDoc source file <attributes> 
										<linkcss>true</linkcss> <imagesdir>./images</imagesdir> </attributes> Embed 
										stylesheets and images:: - set embedAssets option to true - don't set linkcss 
										attribute - set imagesdir attribute to path relative to project root <embedAssets>true</embedAssets> 
										<attributes> <imagesdir>src/docs/asciidoc/images</imagesdir> </attributes> 
										Link to stylesheets but embed images:: - set embedAssets option to true - 
										set linkcss attribute to true - set imagesdir attribute to path relative 
										to project root <embedAssets>true</embedAssets> <attributes> <linkcss>true</linkcss> 
										<imagesdir>src/docs/asciidoc/images</imagesdir> </attributes> Embed stylesheets 
										but link images (default):: - don't set embedAssets option - don't set linkcss 
										attribute - set imagesdir attribute to path relative to AsciiDoc source file 
										<attributes> <imagesdir>./images</imagesdir> </attributes> IMPORTANT: When 
										you enable image embedding, you must qualify the path the the imagesdir, 
										as shown above. -->
									<attributes>
										<imagesdir>./images</imagesdir>
										<toc>left</toc>
										<icons>font</icons>
										<sectanchors>true</sectanchors>
										<!-- set the idprefix to blank -->
										<idprefix />
										<idseparator>-</idseparator>
										<docinfo1>true</docinfo1>
										<linkcss>true</linkcss>
										<webfonts>false</webfonts>
										<iconfont-remote>false</iconfont-remote>
										<iconfont-name>font-awesome-4.1.0/css/font-awesome</iconfont-name>
										<!-- <stylesheet>my-theme.css</stylesheet> -->
									</attributes>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>2.10</version>
						<executions>
							<execution>
								<id>unpack</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>unpack</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>com.ebao</groupId>
											<artifactId>ebao-adocframe-default</artifactId>
											<version>1.0.0</version>
											<type>jar</type>

										</artifactItem>
									</artifactItems>
									<outputDirectory>${project.build.directory}/generated-docs</outputDirectory>
									<overWriteReleases>false</overWriteReleases>
									<overWriteSnapshots>true</overWriteSnapshots>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		
		
		<!-- 当存在dbasset.hisstory的标记文件时,自动创建dbasset包 
			过程如下
			1.下载所有依赖的*.db.zip 依赖包
			2.产生当前工程的依赖关系树文件
			3.自动更新
		-->
		<profile>
			<id>db-upgrade-package</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<file>  
			     	<exists>${dbasset.activation.flagfile}</exists>  
			    </file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>2.2</version>
						<executions>
							<execution>
								<id>copy-db-zip</id>
								<phase>package</phase>
								<goals>
					              	<goal>copy-dependencies</goal>
					            </goals>
					            <configuration>
					              <outputDirectory>${project.build.directory}/db-dependencies</outputDirectory>
					              <overWriteIfNewer>true</overWriteIfNewer>
					              <classifier>db</classifier>
					              <type>zip</type>
								  <stripVersion>true</stripVersion>
					              <includeGroupIds>com.ebao</includeGroupIds>
					              <failOnMissingClassifierArtifact>false</failOnMissingClassifierArtifact>
					            </configuration>
							</execution>
							
							<execution>
								<id>generate-db-execute-order-tree</id>
								<phase>package</phase>
								<goals>
					              	<goal>tree</goal>
					            </goals>
					            <configuration>
					              <outputFile>${project.build.directory}/db-dependencies/dept-tree.info</outputFile>
					              <outputType>tgf</outputType>
					              <!-- [groupId]:[artifactId]:[type]:[version] -->
					              <includes>com.ebao*</includes>
					            </configuration>
							</execution>
						</executions>
					</plugin>
					<!--
					<plugin>
						<groupId>com.ebao.opts</groupId>
						<artifactId>opts-maven-plugin</artifactId>
						<version>${opts-plugin-version}</version>
						<executions>
							<execution>
								<id>rebuild-dbasset-history</id>
								<phase>package</phase>
								<goals>
					              	<goal>dbhistory</goal>
					            </goals>
							</execution>
						</executions>
					</plugin>
					-->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<executions>
							<execution>
								<id>dbasset</id>
								<phase>package</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		
		
		<profile>
			<id>ui-build-and-package</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<file>  
			     	<exists>${ui.activation.flagfile}</exists>  
			    </file>
			</activation>
			<build>
				<plugins>
					<plugin>
				        <groupId>com.github.eirslett</groupId>
				        <artifactId>frontend-maven-plugin</artifactId>
				        <!-- Use the latest released version:
				        https://repo1.maven.org/maven2/com/github/eirslett/frontend-maven-plugin/ -->
				        <version>${frontend.maven.plugin.version}</version>				        
				        <configuration>
				        	<installDirectory>target</installDirectory>
				        </configuration>
				        <executions>
				        	<!--  install node and npm -->
				        	<execution>
							    <id>node-npm-install</id>
							    <goals>
							        <goal>install-node-and-npm</goal>
							    </goals>
							    <phase>process-resources</phase>
							   <configuration>
							      <nodeVersion>${nodejs.version}</nodeVersion>
							      <npmVersion>${npm.version}</npmVersion>
							      <!-- optional: where to download node and npm from. Defaults to https://nodejs.org/dist/ -->
							      <nodeDownloadRoot>${local.nodejs.software.repo}</nodeDownloadRoot>
		      					  <npmDownloadRoot>${local.nodejs.software.repo}</npmDownloadRoot>
							   </configuration>
							 </execution>
				
							 <!-- install the node modules -->
							 <execution>
							    <id>npm-install-node-modules</id>
							    <goals>
							        <goal>npm</goal>
							    </goals>
							    <phase>prepare-package</phase>
							    <configuration>
							        <!-- optional: The default argument is actually
							        "install", so unless you need to run some other npm command,
							        you can remove this whole <configuration> section.
							        -->
							        <arguments>install --registry=${ebao.nodejs.registry}</arguments>
							    </configuration>
							 </execution>
				        	
							  <execution>
							    <id>run and build</id>
							    <goals>
							        <goal>npm</goal>
							    </goals>
							    <phase>prepare-package</phase>
							    <configuration>
							        <!-- optional: The default argument is actually
							        "install", so unless you need to run some other npm command,
							        you can remove this whole <configuration> section.
							        -->
							        <arguments>run build</arguments>
							    </configuration>
							 </execution>
				        </executions>		   
				    </plugin>
				    
				    <plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<executions>
							<execution>
								<id>uipackage</id>
								<phase>package</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
